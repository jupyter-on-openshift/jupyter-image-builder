#!/bin/bash

set -x

set -eo pipefail

XYZ=4.2.12

XY=`echo $XYZ | sed -e 's/\.[0-9]*$//'`

BLD_DIR=/tmp/build

DEST_DIR=/opt/app-root/packages/conda-$XY

DOWNLOAD_URL=https://repo.continuum.io/miniconda/Miniconda3-$XYZ-Linux-x86_64.sh

# Work in a temporary build directory. We will delete this when done.

mkdir $BLD_DIR

curl -sSL -o $BLD_DIR/miniconda3.sh $DOWNLOAD_URL

bash $BLD_DIR/miniconda3.sh -b -p $DEST_DIR

# Allow easy direct installs from conda forge.

$DEST_DIR/bin/conda config --system --add channels conda-forge

# Do not attempt to auto update conda or dependencies.

$DEST_DIR/bin/conda config --system --set auto_update_conda false
# Bug in conda 4.3.>15 prevents --set update_dependencies.
echo 'update_dependencies: false' >> $DEST_DIR/.condarc
$DEST_DIR/bin/conda config --system --set show_channel_urls true

# Install minimal packages to support running Jupyter notebooks.

$DEST_DIR/bin/conda install --yes --quiet \
    "notebook=5.2.2" "jupyterhub=0.8.1" "ipykernel=4.7.0"

# Clean out caches and anything else when done.

$DEST_DIR/bin/conda clean -tipsy

# For consistency with PSF Python, create versioned commands for pip.

cp $DEST_DIR/bin/pip $DEST_DIR/bin/pip3
cp $DEST_DIR/bin/pip $DEST_DIR/bin/pip3.5

# Packages need to be placed under /opt/app-root/packages. We need to
# leave an assemble and activate script. The assemble script moves any
# packages into place in a subsequent chained build. The activate script
# sets up any environment for using the package.

mv assemble $DEST_DIR
mv activate $DEST_DIR

# Remove build directory and input files to S2I build.

rm -rf $BLD_DIR
