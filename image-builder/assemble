#!/bin/bash

set -x

set -eo pipefail

# Move files from where S2I injects them to src directory for building.

echo "Moving source files into place."

(shopt -s dotglob; mv /tmp/src/* ./)

# Fail if no packages have been injected into the container via the S2I
# process.

echo "Checking if runtime packages exist."

if [ ! -d .s2i/packages ]; then
    echo "ERROR: No runtime packages have been provided." 
    exit 1
fi

# Determine default Python runtime to use.

if [ -f runtime.txt ]; then
    PYTHON_RUNTIME=`cat runtime.txt`
fi

if [ x"$PYTHON_RUNTIME" = x"" ]; then
    # If no runtime specified work out if should use Anaconda Python
    # vs normal PSF Python by looking for presence of environment.yml.

    if [ -f environment.yml ]; then
        PYTHON_RUNTIME=conda-4.2
    else
        PYTHON_RUNTIME=python-3.5
    fi
fi

case $PYTHON_RUNTIME in
    #conda-4.2)
    #    PYTHON_VERSION=3.5
    #    ;;
    #conda-5.0)
    #    PYTHON_VERSION=3.6
    #    ;;
    #python-2.7)
    #    PYTHON_VERSION=2.7
    #    ;;
    python-3.5)
        PYTHON_VERSION=3.5
        ;;
    python-3.6)
        PYTHON_VERSION=3.6
        ;;
    *)
        echo "ERROR: Invalid Python runtime specified."
        exit 1
        ;;
esac

case $PYTHON_RUNTIME in
    python-3.*)
        .s2i/packages/$PYTHON_RUNTIME/assemble

        . /opt/app-root/packages/$PYTHON_RUNTIME/activate

        pip3 install --no-cache-dir "notebook==5.2.*" "jupyterhub==0.8.*"

        if [ -f requirements.txt ]; then
            pip3 install --no-cache-dir -r requirements.txt
        fi

        if [ -f packages.txt ]; then
            if grep '^python-2.7$'; then
                .s2i/packages/python-2.7/assemble

                . /opt/app-root/packages/python-2.7/activate

                ln -fs python2.7 /opt/app-root/packages/python-2.7/bin/python2

                curl -sSL 'https://bootstrap.pypa.io/get-pip.py' | python2.7

                ln -fs pip2 /opt/app-root/packages/python-2.7/bin/pip2.7

                ls -las /opt/app-root/packages/python-2.7/bin

                pip2.7 install --no-cache-dir -U setuptools wheel

                pip2.7 install --no-cache-dir "ipykernel==4.6.*"

                python2.7 -m ipykernel install --user

                python3 -m ipykernel install --user

                if [ -f requirements.txt ]; then
                    pip2.7 install --no-cache-dir -r requirements.txt
                fi
            fi
        fi

        ;;

    #conda-*)
    #    ;;

    *)
        echo "ERROR: Whoops, not sure what to do for this runtime."
        exit 1
        ;;
esac

jupyter notebook --generate-config

cat >> $HOME/.jupyter/jupyter_notebook_config.py << EOF
import os
password = os.environ.get('JUPYTER_NOTEBOOK_PASSWORD')
if password:
    import notebook.auth
    c.NotebookApp.password = notebook.auth.passwd(password)
    del password
    del os.environ['JUPYTER_NOTEBOOK_PASSWORD']
EOF

# Remove runtime packages which were not required.

rm -rf .s2i/packages

# Fixup permissions.

fix-permissions /opt/app-root
